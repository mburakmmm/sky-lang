# Comprehensive collection methods test

import _builtins

function main
  print("=== STRING METHODS ===")
  let text = "hello world"
  print(str_upper(text))
  print(str_lower("HELLO"))
  print(str_capitalize("alice"))
  
  let parts = str_split("a,b,c", ",")
  print(len(parts))
  print(parts[1])
  
  let joined = str_join("-", ["x", "y", "z"])
  print(joined)
  
  let replaced = str_replace("hello world", "world", "SKY")
  print(replaced)
  
  let trimmed = str_strip("  hello  ")
  print(trimmed)
  
  print(str_startswith("hello", "hel"))
  print(str_endswith("hello", "lo"))
  
  let found = str_find("abcdef", "cd")
  print(found)
  
  let counted = str_count("aaa bbb aaa", "aaa")
  print(counted)
  
  print("=== LIST METHODS ===")
  let nums = [1, 2, 3]
  list_append(nums, 4)
  print(nums[3])
  
  let popped = list_pop(nums)
  print(popped)
  print(len(nums))
  
  list_insert(nums, 1, 99)
  print(nums[1])
  
  let idx = list_index(nums, 3)
  print(idx)
  
  let cnt = list_count([1, 2, 1, 1], 1)
  print(cnt)
  
  let original = [5, 6, 7]
  let copied = list_copy(original)
  print(copied[0])
  
  list_reverse(original)
  print(original[0])
  
  let a = [1, 2]
  let b = [3, 4]
  list_extend(a, b)
  print(len(a))
  
  print("=== DICT METHODS ===")
  let data = {"x": "10", "y": "20", "z": "30"}
  let keys = dict_keys(data)
  print(len(keys))
  
  let vals = dict_values(data)
  print(len(vals))
  
  let val = dict_get(data, "x", "default")
  print(val)
  
  let missing = dict_get(data, "notfound", "DEFAULT")
  print(missing)
  
  let removed = dict_pop(data, "y", "none")
  print(removed)
  print(len(data))
  
  let d2 = {"a": "1"}
  dict_update(d2, {"b": "2", "c": "3"})
  print(len(d2))
  
  dict_clear(d2)
  print(len(d2))
  
  print("=== ALL TESTS PASSED ===")
end

