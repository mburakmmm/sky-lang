# Comprehensive test (without deep recursion)
import _bypass

print("======================================")
print("SKY COMPREHENSIVE FEATURE TEST")
print("======================================")

# TEST 1: BASIC TYPES
print("")
print("TEST 1: BASIC TYPES & OPERATORS")
let x = 10
let y = 20
print("  Int ops:", x + y, x * y)
print("  âœ… Basic types working!")

# TEST 2: CONTROL FLOW  
print("")
print("TEST 2: CONTROL FLOW")
let sum = 0
for i in range(10)
  if i == 3
    continue
  end
  if i == 7
    break
  end
  sum = sum + i
end
print("  Sum:", sum)
print("  âœ… Control flow working!")

# TEST 3: FUNCTIONS (no deep recursion)
print("")
print("TEST 3: FUNCTIONS")
function add(a, b)
  return a + b
end
print("  add(10, 20) =", add(10, 20))
print("  âœ… Functions working!")

# TEST 4: COLLECTIONS
print("")
print("TEST 4: COLLECTIONS")
let nums = [1, 2, 3]
print("  List:", nums)
let cfg = {"host": "localhost"}
print("  Dict:", cfg)
print("  âœ… Collections working!")

# TEST 5: CLASS/OOP
print("")
print("TEST 5: CLASS/SELF")
class Dog
  function init(name)
    self.name = name
  end
  function bark()
    print("  Dog", self.name, "barks!")
  end
end
let dog = Dog("Buddy")
dog.bark()
print("  âœ… Class/self working!")

# TEST 6: ENUM/MATCH
print("")
print("TEST 6: ENUM & MATCH")
enum Status
  Ok
  Error
end
let s = Ok()
match s
  Ok() => print("  Status: OK")
  Error() => print("  Status: ERROR")
end
print("  âœ… Enum/match working!")

# TEST 7: UNSAFE
print("")
print("TEST 7: UNSAFE BLOCKS")
unsafe
  let ptr = 0xFF00
  print("  Pointer:", ptr)
end
print("  âœ… Unsafe working!")

# TEST 8: NATIVE STDLIB
print("")
print("TEST 8: NATIVE STDLIB")
let plat = os_platform()
print("  Platform:", plat)
let hash = crypto_sha256("test")
print("  SHA256:", hash)
print("  âœ… Stdlib working!")

# TEST 9: BUILTINS
print("")
print("TEST 9: BUILTINS")
let i = int("42")
print("  int('42') =", i)
print("  type(123) =", type(123))
print("  âœ… Builtins working!")

# TEST 10: METHODS
print("")
print("TEST 10: METHODS")
let text = "hello"
print("  upper():", text.upper())
print("  âœ… Methods working!")

print("")
print("======================================")
print("ðŸŽ‰ ALL TESTS PASSED!")
print("======================================")

