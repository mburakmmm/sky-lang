# Test Decorators - Simple

# Simple decorator
function debug(fn): any
  function wrapper(x): int
    print("Debug: calling function with " + str(x))
    let result = fn(x)
    print("Debug: result = " + str(result))
    return result
  end
  return wrapper
end

# Multiple wrapper
function double_result(fn): any
  function wrapper(x): int
    let result = fn(x)
    return result * 2
  end
  return wrapper
end

# Use decorator
@debug
function square(x): int
  return x * x
end

@double_result
function add_ten(x): int
  return x + 10
end

# Multiple decorators
@debug
@double_result
function triple(x): int
  return x * 3
end

function main
  print("=== Decorator Test ===")
  
  # Test simple decorator
  print("Square(5):")
  let sq = square(5)
  print("Final: " + str(sq))
  print("")
  
  # Test double_result decorator
  print("Add_ten(5):")
  let result = add_ten(5)
  print("Final: " + str(result))
  print("")
  
  # Test multiple decorators
  print("Triple(4):")
  let tr = triple(4)
  print("Final: " + str(tr))
  
  print("=== Test Complete ===")
end
